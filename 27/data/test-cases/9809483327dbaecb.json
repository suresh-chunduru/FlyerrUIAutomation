{"uid":"9809483327dbaecb","name":"test_Profile_Individual_Flyer_EditServiceLocation","fullName":"tests.test_suite_demo.ProfileTest#test_Profile_Individual_Flyer_EditServiceLocation","historyId":"d1516c52a340026e75be8be2d4d52994","time":{"start":1660214750177,"stop":1660214786387,"duration":36210},"status":"failed","statusMessage":"AssertionError: Edit Service Location modal not displayed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditServiceLocation>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditServiceLocation(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with IndividualAccount credentials'):\n            self.loginPage.loginAndRefresh(username=td.testData(\"loginData.individual.username\"), password=td.testData(\"loginData.individual.password\"))\n            self.ts.markFinal(self.loggedInPage.isAt, \"Login with IndividualAccount successful\", \"Login with IndividualAccount failed\")\n    \n        with allure.step('Navigate to Profile Page'):\n            self.loggedInNavigation.goToProfilePage()\n            self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n    \n        with allure.step('Navigate to Edit Service Location modal'):\n            self.profileNavigation.goToEditServiceLocation()\n>           self.ts.markFinal(self.profilePage.isEditServiceLocationModalDisplayed(), \"Edit Service Location modal displayed successfully\",\n                              \"Edit Service Location modal not displayed\")\n\ntests/test_profile.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fd747d254e0>\nresult = False\npassResultMessage = 'Edit Service Location modal displayed successfully'\nfailResultMessage = 'Edit Service Location modal not displayed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Edit Service Location modal not displayed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setUp","time":{"start":1660214744994,"stop":1660214750177,"duration":5183},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660214744994,"stop":1660214744994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_ProfileTest","time":{"start":1660214744994,"stop":1660214744994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Edit Service Location modal not displayed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditServiceLocation>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditServiceLocation(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with IndividualAccount credentials'):\n            self.loginPage.loginAndRefresh(username=td.testData(\"loginData.individual.username\"), password=td.testData(\"loginData.individual.password\"))\n            self.ts.markFinal(self.loggedInPage.isAt, \"Login with IndividualAccount successful\", \"Login with IndividualAccount failed\")\n    \n        with allure.step('Navigate to Profile Page'):\n            self.loggedInNavigation.goToProfilePage()\n            self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n    \n        with allure.step('Navigate to Edit Service Location modal'):\n            self.profileNavigation.goToEditServiceLocation()\n>           self.ts.markFinal(self.profilePage.isEditServiceLocationModalDisplayed(), \"Edit Service Location modal displayed successfully\",\n                              \"Edit Service Location modal not displayed\")\n\ntests/test_profile.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fd747d254e0>\nresult = False\npassResultMessage = 'Edit Service Location modal displayed successfully'\nfailResultMessage = 'Edit Service Location modal not displayed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Edit Service Location modal not displayed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660214750178,"stop":1660214750945,"duration":767},"status":"passed","steps":[],"attachments":[{"uid":"f0f4f24423e53f8b","name":"Homepage loaded completely.1660214750212.png","source":"f0f4f24423e53f8b.png","type":"image/png","size":52402}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660214750945,"stop":1660214759499,"duration":8554},"status":"passed","steps":[],"attachments":[{"uid":"b48a7292f73b53ab","name":"Navigation to login page.1660214757069.png","source":"b48a7292f73b53ab.png","type":"image/png","size":164992}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Login with IndividualAccount credentials","time":{"start":1660214759499,"stop":1660214771177,"duration":11678},"status":"passed","steps":[],"attachments":[{"uid":"77d1643a25698783","name":"Login with IndividualAccount successful.1660214769171.png","source":"77d1643a25698783.png","type":"image/png","size":33570}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to Profile Page","time":{"start":1660214771177,"stop":1660214782116,"duration":10939},"status":"passed","steps":[],"attachments":[{"uid":"60eec2975c35ceca","name":"Navigation to profile page.1660214780579.png","source":"60eec2975c35ceca.png","type":"image/png","size":128443}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to Edit Service Location modal","time":{"start":1660214782116,"stop":1660214786387,"duration":4271},"status":"failed","statusMessage":"AssertionError: Edit Service Location modal not displayed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_profile.py\", line 136, in test_Profile_Individual_Flyer_EditServiceLocation\n    self.ts.markFinal(self.profilePage.isEditServiceLocationModalDisplayed(), \"Edit Service Location modal displayed successfully\",\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"6aa834c182f92db4","name":"Edit Service Location modal not displayed.1660214784580.png","source":"6aa834c182f92db4.png","type":"image/png","size":145457}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"bad801a5103881ff","name":"log","source":"bad801a5103881ff.txt","type":"text/plain","size":4506},{"uid":"4fd0a2a21eb7572","name":"stdout","source":"4fd0a2a21eb7572.txt","type":"text/plain","size":100}],"parameters":[],"stepsCount":5,"attachmentsCount":7,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660214786416,"stop":1660214786498,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660214786498,"stop":1660214786498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_ProfileTest::0","time":{"start":1660214786499,"stop":1660214786499,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Profile"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"ProfileTest"},{"name":"host","value":"fv-az208-441"},{"name":"thread","value":"2396-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":7},"items":[{"uid":"5cc1df89cdd1c51b","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/26//#testresult/5cc1df89cdd1c51b","status":"failed","statusDetails":"AssertionError: Edit Service Location modal not displayed","time":{"start":1660135117720,"stop":1660135151388,"duration":33668}},{"uid":"8a9d904c4dc6dd4a","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/25//#testresult/8a9d904c4dc6dd4a","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132323159,"stop":1660132361199,"duration":38040}},{"uid":"e770f0a7b0b7a93b","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/e770f0a7b0b7a93b","status":"failed","statusDetails":"AssertionError: Navigation to profile page failed","time":{"start":1660128768594,"stop":1660128856430,"duration":87836}},{"uid":"cb0c95dfbb2ec79","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/cb0c95dfbb2ec79","status":"failed","statusDetails":"AssertionError: Navigation to profile page failed","time":{"start":1660127786947,"stop":1660127881002,"duration":94055}},{"uid":"34a1fd804dd23aed","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/34a1fd804dd23aed","status":"passed","time":{"start":1660121426713,"stop":1660121540435,"duration":113722}},{"uid":"2c6334ecce63aa71","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/2c6334ecce63aa71","status":"passed","time":{"start":1660120886107,"stop":1660120997415,"duration":111308}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"9809483327dbaecb.json","parameterValues":[]}