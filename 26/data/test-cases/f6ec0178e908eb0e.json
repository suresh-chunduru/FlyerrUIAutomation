{"uid":"f6ec0178e908eb0e","name":"test_Profile_Individual_Flyer_EditProfile","fullName":"tests.test_suite_demo.ProfileTest#test_Profile_Individual_Flyer_EditProfile","historyId":"95b3d702906cfd25c0335746d4c44f6f","time":{"start":1660135113105,"stop":1660135188749,"duration":75644},"status":"failed","statusMessage":"AssertionError: Navigation to profile page failed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditProfile>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditProfile(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with IndividualAccount credentials'):\n            self.loginPage.loginAndRefresh(username=td.testData(\"loginData.individual.username\"), password=td.testData(\"loginData.individual.password\"))\n            self.ts.markFinal(self.loggedInPage.isAt, \"Login with IndividualAccount successful\", \"Login with IndividualAccount failed\")\n    \n        with allure.step('Navigate to Profile Page'):\n            self.loggedInNavigation.goToProfilePage()\n>           self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n\ntests/test_profile.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f38cf1e4550>\nresult = False, passResultMessage = 'Navigation to profile page'\nfailResultMessage = 'Navigation to profile page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to profile page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ProfileTest","time":{"start":1660135107229,"stop":1660135107230,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"setUp","time":{"start":1660135107230,"stop":1660135113104,"duration":5874},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"oneTimeSetUp","time":{"start":1660135107230,"stop":1660135107230,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to profile page failed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditProfile>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditProfile(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with IndividualAccount credentials'):\n            self.loginPage.loginAndRefresh(username=td.testData(\"loginData.individual.username\"), password=td.testData(\"loginData.individual.password\"))\n            self.ts.markFinal(self.loggedInPage.isAt, \"Login with IndividualAccount successful\", \"Login with IndividualAccount failed\")\n    \n        with allure.step('Navigate to Profile Page'):\n            self.loggedInNavigation.goToProfilePage()\n>           self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n\ntests/test_profile.py:75: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f38cf1e4550>\nresult = False, passResultMessage = 'Navigation to profile page'\nfailResultMessage = 'Navigation to profile page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to profile page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660135113106,"stop":1660135114997,"duration":1891},"status":"passed","steps":[],"attachments":[{"uid":"b50d3b8783652c2d","name":"Homepage loaded completely.1660135113118.png","source":"b50d3b8783652c2d.png","type":"image/png","size":52402}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false},{"name":"Navigate to login page","time":{"start":1660135114997,"stop":1660135121499,"duration":6502},"status":"passed","steps":[],"attachments":[{"uid":"a5233d9b297c7529","name":"Navigation to login page.1660135119935.png","source":"a5233d9b297c7529.png","type":"image/png","size":37987}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false},{"name":"Login with IndividualAccount credentials","time":{"start":1660135121499,"stop":1660135134149,"duration":12650},"status":"passed","steps":[],"attachments":[{"uid":"677a26d29a9d8a5c","name":"Login with IndividualAccount successful.1660135131582.png","source":"677a26d29a9d8a5c.png","type":"image/png","size":342903}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false},{"name":"Navigate to Profile Page","time":{"start":1660135134149,"stop":1660135188749,"duration":54600},"status":"failed","statusMessage":"AssertionError: Navigation to profile page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_profile.py\", line 75, in test_Profile_Individual_Flyer_EditProfile\n    self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"6bc334381d805f41","name":"Navigation to profile page failed.1660135188305.png","source":"6bc334381d805f41.png","type":"image/png","size":342903}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true}],"attachments":[{"uid":"8fba1f0e22aef2ab","name":"log","source":"8fba1f0e22aef2ab.txt","type":"text/plain","size":3375},{"uid":"a0712bb527f9a18c","name":"stdout","source":"a0712bb527f9a18c.txt","type":"text/plain","size":100},{"uid":"6b59b0dab4646486","name":"stderr","source":"6b59b0dab4646486.txt","type":"text/plain","size":13089}],"parameters":[],"hasContent":true,"stepsCount":4,"attachmentsCount":7,"shouldDisplayMessage":true},"afterStages":[{"name":"setUp::0","time":{"start":1660135188765,"stop":1660135188830,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"oneTimeSetUp::0","time":{"start":1660135188830,"stop":1660135188830,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"_unittest_setUpClass_fixture_ProfileTest::0","time":{"start":1660135188831,"stop":1660135188831,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"story","value":"Profile"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"ProfileTest"},{"name":"host","value":"fv-az135-755"},{"name":"thread","value":"2354-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":6},"items":[{"uid":"fcdab864d5e69795","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/25//#testresult/fcdab864d5e69795","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132322145,"stop":1660132360338,"duration":38193}},{"uid":"c3e997c7d1e96cdd","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/c3e997c7d1e96cdd","status":"passed","time":{"start":1660128765301,"stop":1660128859196,"duration":93895}},{"uid":"e387340037b41704","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/e387340037b41704","status":"passed","time":{"start":1660127785702,"stop":1660127907631,"duration":121929}},{"uid":"630a626821641ca9","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/630a626821641ca9","status":"passed","time":{"start":1660121426727,"stop":1660121542427,"duration":115700}},{"uid":"51c267ec2f909f63","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/51c267ec2f909f63","status":"passed","time":{"start":1660120886588,"stop":1660120998901,"duration":112313}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"f6ec0178e908eb0e.json","parameterValues":[]}