{"uid":"25d5caeb34c64d50","name":"test_Profile_Individual_Flyer_EditSkills","fullName":"tests.test_suite_demo.ProfileTest#test_Profile_Individual_Flyer_EditSkills","historyId":"92973f1edbc8522e4fe5585e717a8ed3","time":{"start":1660121427577,"stop":1660121540682,"duration":113105},"status":"failed","statusMessage":"AssertionError: Navigation to profile page failed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditSkills>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditSkills(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with IndividualAccount credentials'):\n            self.loginPage.loginAndRefresh(username=td.testData(\"loginData.individual.username\"),\n                                           password=td.testData(\"loginData.individual.password\"))\n            self.ts.markFinal(self.loggedInPage.isAt, \"Login with IndividualAccount successful\",\n                              \"Login with IndividualAccount failed\")\n    \n        with allure.step('Navigate to Profile Page'):\n            self.loggedInNavigation.goToProfilePage()\n>           self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n\ntests/test_profile.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f0f9d751900>\nresult = False, passResultMessage = 'Navigation to profile page'\nfailResultMessage = 'Navigation to profile page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to profile page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"oneTimeSetUp","time":{"start":1660121408994,"stop":1660121408994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_ProfileTest","time":{"start":1660121408994,"stop":1660121408994,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660121408994,"stop":1660121427575,"duration":18581},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to profile page failed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditSkills>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditSkills(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with IndividualAccount credentials'):\n            self.loginPage.loginAndRefresh(username=td.testData(\"loginData.individual.username\"),\n                                           password=td.testData(\"loginData.individual.password\"))\n            self.ts.markFinal(self.loggedInPage.isAt, \"Login with IndividualAccount successful\",\n                              \"Login with IndividualAccount failed\")\n    \n        with allure.step('Navigate to Profile Page'):\n            self.loggedInNavigation.goToProfilePage()\n>           self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n\ntests/test_profile.py:183: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f0f9d751900>\nresult = False, passResultMessage = 'Navigation to profile page'\nfailResultMessage = 'Navigation to profile page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to profile page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660121427578,"stop":1660121435797,"duration":8219},"status":"passed","steps":[],"attachments":[{"uid":"9b6032148a524b69","name":"Homepage loaded completely.1660121429291.png","source":"9b6032148a524b69.png","type":"image/png","size":52402}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660121435797,"stop":1660121463615,"duration":27818},"status":"passed","steps":[],"attachments":[{"uid":"8bb4943053d1027b","name":"Navigation to login page.1660121446194.png","source":"8bb4943053d1027b.png","type":"image/png","size":164992}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Login with IndividualAccount credentials","time":{"start":1660121463615,"stop":1660121485572,"duration":21957},"status":"passed","steps":[],"attachments":[{"uid":"f660d3ee077c0b34","name":"Login with IndividualAccount successful.1660121483133.png","source":"f660d3ee077c0b34.png","type":"image/png","size":342903}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to Profile Page","time":{"start":1660121485572,"stop":1660121540606,"duration":55034},"status":"failed","statusMessage":"AssertionError: Navigation to profile page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_profile.py\", line 183, in test_Profile_Individual_Flyer_EditSkills\n    self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"78f22c126c3326ef","name":"Navigation to profile page failed.1660121539758.png","source":"78f22c126c3326ef.png","type":"image/png","size":342903}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"e9cc99990271215a","name":"log","source":"e9cc99990271215a.txt","type":"text/plain","size":3375},{"uid":"eaab0c57082d442c","name":"stdout","source":"eaab0c57082d442c.txt","type":"text/plain","size":100},{"uid":"2b1daadc8f7975c2","name":"stderr","source":"2b1daadc8f7975c2.txt","type":"text/plain","size":13506}],"parameters":[],"stepsCount":4,"attachmentsCount":7,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660121540919,"stop":1660121541017,"duration":98},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660121541022,"stop":1660121541022,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_ProfileTest::0","time":{"start":1660121541023,"stop":1660121541024,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Profile"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"ProfileTest"},{"name":"host","value":"fv-az177-801"},{"name":"thread","value":"2381-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"d1194804e2cbc728","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/d1194804e2cbc728","status":"failed","statusDetails":"AssertionError: Navigation to profile page failed","time":{"start":1660120888606,"stop":1660120998665,"duration":110059}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"25d5caeb34c64d50.json","parameterValues":[]}