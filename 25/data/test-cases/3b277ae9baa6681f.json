{"uid":"3b277ae9baa6681f","name":"test_submit_the_offer","fullName":"tests.test_suite_demo.SubmitOffer#test_submit_the_offer","historyId":"8f1f3e162b3a786314ff35968da0c6a5","time":{"start":1660132356552,"stop":1660132389499,"duration":32947},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_submitOffer.SubmitOffer testMethod=test_submit_the_offer>\n\n    @allure.story('Job Management') # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_submit_the_offer(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.submitOfferPage = SubmitOfferPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_submitOffer.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f47f08f2aa0>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"oneTimeSetUp","time":{"start":1660132353539,"stop":1660132353540,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_SubmitOffer","time":{"start":1660132353539,"stop":1660132353539,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132353540,"stop":1660132356551,"duration":3011},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_submitOffer.SubmitOffer testMethod=test_submit_the_offer>\n\n    @allure.story('Job Management') # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_submit_the_offer(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.submitOfferPage = SubmitOfferPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_submitOffer.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f47f08f2aa0>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132356553,"stop":1660132356988,"duration":435},"status":"passed","steps":[],"attachments":[{"uid":"1612b7184e998759","name":"Homepage loaded completely.1660132356557.png","source":"1612b7184e998759.png","type":"image/png","size":14695}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132356988,"stop":1660132389498,"duration":32510},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_submitOffer.py\", line 38, in test_submit_the_offer\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"f84ffd433dc6c013","name":"Navigation to login page failed.1660132389054.png","source":"f84ffd433dc6c013.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"e6c6e49f911cacba","name":"log","source":"e6c6e49f911cacba.txt","type":"text/plain","size":992},{"uid":"98e463c2e9082fd5","name":"stdout","source":"98e463c2e9082fd5.txt","type":"text/plain","size":100},{"uid":"dac2ef100f5e80f4","name":"stderr","source":"dac2ef100f5e80f4.txt","type":"text/plain","size":6510}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132389504,"stop":1660132389568,"duration":64},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132389569,"stop":1660132389569,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_SubmitOffer::0","time":{"start":1660132389569,"stop":1660132389569,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Job Management"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"SubmitOffer"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2370-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"7bcba94e01e05cf","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/7bcba94e01e05cf","status":"passed","time":{"start":1660128802183,"stop":1660128865217,"duration":63034}},{"uid":"ae11c95c73518bfd","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/ae11c95c73518bfd","status":"passed","time":{"start":1660127786710,"stop":1660127887930,"duration":101220}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"3b277ae9baa6681f.json","parameterValues":[]}