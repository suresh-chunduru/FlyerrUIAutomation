{"uid":"86f2b60d6b9e0c58","name":"test_Admin_Verify_Admin_Page","fullName":"tests.test_suite_demo.AdminConfigurationsTest#test_Admin_Verify_Admin_Page","historyId":"08e18268b4a5922701a45ee96386644f","time":{"start":1660132276902,"stop":1660132314373,"duration":37471},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_adminConfiguration.AdminConfigurationsTest testMethod=test_Admin_Verify_Admin_Page>\n\n    @allure.story('AdminConfiguration')  # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR)  # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Admin_Verify_Admin_Page(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.adminConfigurationPage = AdminConfigurationPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_adminConfiguration.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f47f0902c20>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_AdminConfigurationsTest","time":{"start":1660132269448,"stop":1660132269448,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660132269449,"stop":1660132269450,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132269451,"stop":1660132276896,"duration":7445},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_adminConfiguration.AdminConfigurationsTest testMethod=test_Admin_Verify_Admin_Page>\n\n    @allure.story('AdminConfiguration')  # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR)  # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Admin_Verify_Admin_Page(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.adminConfigurationPage = AdminConfigurationPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_adminConfiguration.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f47f0902c20>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132276906,"stop":1660132281740,"duration":4834},"status":"passed","steps":[],"attachments":[{"uid":"7ff25b9089326c17","name":"Homepage loaded completely.1660132276954.png","source":"7ff25b9089326c17.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132281740,"stop":1660132314372,"duration":32632},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_adminConfiguration.py\", line 43, in test_Admin_Verify_Admin_Page\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"66bb17952f8dc1bf","name":"Navigation to login page failed.1660132313771.png","source":"66bb17952f8dc1bf.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"790604b054adf288","name":"log","source":"790604b054adf288.txt","type":"text/plain","size":992},{"uid":"81877a3115d0b309","name":"stdout","source":"81877a3115d0b309.txt","type":"text/plain","size":100},{"uid":"34e671bda193af50","name":"stderr","source":"34e671bda193af50.txt","type":"text/plain","size":6772}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132314384,"stop":1660132314452,"duration":68},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132314452,"stop":1660132314452,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_AdminConfigurationsTest::0","time":{"start":1660132314453,"stop":1660132314453,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"minor"},{"name":"story","value":"AdminConfiguration"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"AdminConfigurationsTest"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2370-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":6},"items":[{"uid":"25ca0b3379bcd507","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/24//#testresult/25ca0b3379bcd507","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132197196,"stop":1660132233786,"duration":36590}},{"uid":"55a4e5fa27936ef4","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/55a4e5fa27936ef4","status":"passed","time":{"start":1660128725991,"stop":1660128772732,"duration":46741}},{"uid":"41de3564a59a0798","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/41de3564a59a0798","status":"passed","time":{"start":1660127787068,"stop":1660127859341,"duration":72273}},{"uid":"8d5b51c99d2a7ba","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/8d5b51c99d2a7ba","status":"passed","time":{"start":1660121427613,"stop":1660121489109,"duration":61496}},{"uid":"eb82071d21d6697","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/eb82071d21d6697","status":"passed","time":{"start":1660120886785,"stop":1660120947736,"duration":60951}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"86f2b60d6b9e0c58.json","parameterValues":[]}