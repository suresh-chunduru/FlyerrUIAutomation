{"uid":"d5801d81a1f031c9","name":"test_Login_Login_with_BusinessAccount","fullName":"tests.test_suite_demo.LoginTest#test_Login_Login_with_BusinessAccount","historyId":"ad6a6eeb9196a324085d0376d1ce8016","time":{"start":1660132277315,"stop":1660132316571,"duration":39256},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_login.LoginTest testMethod=test_Login_Login_with_BusinessAccount>\n\n    @allure.story('KeyCloak')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Login_Login_with_BusinessAccount(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_login.py:131: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fe945416fe0>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setUp","time":{"start":1660132269442,"stop":1660132277313,"duration":7871},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660132269442,"stop":1660132269442,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_LoginTest","time":{"start":1660132269442,"stop":1660132269442,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_login.LoginTest testMethod=test_Login_Login_with_BusinessAccount>\n\n    @allure.story('KeyCloak')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Login_Login_with_BusinessAccount(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_login.py:131: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fe945416fe0>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132277315,"stop":1660132282258,"duration":4943},"status":"passed","steps":[],"attachments":[{"uid":"61e6fac5f1d658a1","name":"Homepage loaded completely.1660132277398.png","source":"61e6fac5f1d658a1.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132282258,"stop":1660132316570,"duration":34312},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_login.py\", line 131, in test_Login_Login_with_BusinessAccount\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"b1524934a885fe8e","name":"Navigation to login page failed.1660132314350.png","source":"b1524934a885fe8e.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"a71b9b169af1869f","name":"log","source":"a71b9b169af1869f.txt","type":"text/plain","size":992},{"uid":"4dad5709c58f6c59","name":"stdout","source":"4dad5709c58f6c59.txt","type":"text/plain","size":100},{"uid":"4c50663867aac6b6","name":"stderr","source":"4c50663867aac6b6.txt","type":"text/plain","size":6775}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132316635,"stop":1660132316700,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132316701,"stop":1660132316701,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_LoginTest::0","time":{"start":1660132316701,"stop":1660132316701,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"KeyCloak"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"LoginTest"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2378-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":6},"items":[{"uid":"912e960a393b3bf3","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/24//#testresult/912e960a393b3bf3","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132197199,"stop":1660132234712,"duration":37513}},{"uid":"90df752209de7da8","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/90df752209de7da8","status":"passed","time":{"start":1660128727061,"stop":1660128763134,"duration":36073}},{"uid":"97f01e903d4fcb04","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/97f01e903d4fcb04","status":"passed","time":{"start":1660127787690,"stop":1660127853479,"duration":65789}},{"uid":"d41d39523bf55727","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/d41d39523bf55727","status":"passed","time":{"start":1660121427826,"stop":1660121484237,"duration":56411}},{"uid":"1fe747999483a9bf","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/1fe747999483a9bf","status":"passed","time":{"start":1660120886481,"stop":1660120939331,"duration":52850}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"d5801d81a1f031c9.json","parameterValues":[]}