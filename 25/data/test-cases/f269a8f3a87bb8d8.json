{"uid":"f269a8f3a87bb8d8","name":"test_post_a_remote_job_request_and_choose_flyers","fullName":"tests.test_suite_demo.PostJobRequest#test_post_a_remote_job_request_and_choose_flyers","historyId":"c865c00f397b9fcbb4b7bf12b8ae2ee3","time":{"start":1660132277356,"stop":1660132314852,"duration":37496},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_postJobRequest.PostJobRequest testMethod=test_post_a_remote_job_request_and_choose_flyers>\n\n    @allure.story('Job Management')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_post_a_remote_job_request_and_choose_flyers(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.postJobRequestPage = PostJobRequestPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page successful\", \"Navigation to login page failed\")\n\ntests/test_postJobRequest.py:135: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fb7e0c0e3e0>\nresult = False, passResultMessage = 'Navigation to login page successful'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_PostJobRequest","time":{"start":1660132269453,"stop":1660132269454,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660132269454,"stop":1660132269454,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132269454,"stop":1660132277355,"duration":7901},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_postJobRequest.PostJobRequest testMethod=test_post_a_remote_job_request_and_choose_flyers>\n\n    @allure.story('Job Management')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_post_a_remote_job_request_and_choose_flyers(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.postJobRequestPage = PostJobRequestPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page successful\", \"Navigation to login page failed\")\n\ntests/test_postJobRequest.py:135: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fb7e0c0e3e0>\nresult = False, passResultMessage = 'Navigation to login page successful'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132277358,"stop":1660132281846,"duration":4488},"status":"passed","steps":[],"attachments":[{"uid":"5902d5005d90bca8","name":"Homepage loaded completely.1660132277578.png","source":"5902d5005d90bca8.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132281846,"stop":1660132314852,"duration":33006},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_postJobRequest.py\", line 135, in test_post_a_remote_job_request_and_choose_flyers\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page successful\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"aac4e2e7cd2aad92","name":"Navigation to login page failed.1660132313953.png","source":"aac4e2e7cd2aad92.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"c115fbdca80b1e4b","name":"log","source":"c115fbdca80b1e4b.txt","type":"text/plain","size":992},{"uid":"b5b584cc57593c0d","name":"stdout","source":"b5b584cc57593c0d.txt","type":"text/plain","size":100},{"uid":"5567078e24dd6014","name":"stderr","source":"5567078e24dd6014.txt","type":"text/plain","size":6783}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132314960,"stop":1660132316025,"duration":1065},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132316026,"stop":1660132316026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_PostJobRequest::0","time":{"start":1660132316026,"stop":1660132316026,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Job Management"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"PostJobRequest"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2394-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":4},"items":[{"uid":"93c72e8e2d971d4","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/24//#testresult/93c72e8e2d971d4","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132197199,"stop":1660132233336,"duration":36137}},{"uid":"d91196be4566c443","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/d91196be4566c443","status":"passed","time":{"start":1660128727138,"stop":1660128816929,"duration":89791}},{"uid":"99a195ee264967ef","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/99a195ee264967ef","status":"broken","statusDetails":"TypeError: object of type 'NoneType' has no len()","time":{"start":1660127784181,"stop":1660127843693,"duration":59512}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"f269a8f3a87bb8d8.json","parameterValues":[]}