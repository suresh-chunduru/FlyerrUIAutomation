{"uid":"6bda6fcbb0219cea","name":"test_Admin_Verify_CountrySettings_Pagination","fullName":"tests.test_suite_demo.AdminConfigurationsTest#test_Admin_Verify_CountrySettings_Pagination","historyId":"85f7dcf9f6c69730fa02a4903dca0124","time":{"start":1660132277535,"stop":1660132316236,"duration":38701},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_adminConfiguration.AdminConfigurationsTest testMethod=test_Admin_Verify_CountrySettings_Pagination>\n\n    @allure.story('AdminConfiguration')  # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR)  # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Admin_Verify_CountrySettings_Pagination(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.adminNavigation = AdminNavigation(self.driver)\n        self.countrySettingsNavigation = CountrySettingsNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.adminConfigurationPage = AdminConfigurationPage(self.driver)\n        self.countrySettingsPage = CountrySettingsPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_adminConfiguration.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f05bbfb03d0>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"oneTimeSetUp","time":{"start":1660132269439,"stop":1660132269439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132269439,"stop":1660132277534,"duration":8095},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_AdminConfigurationsTest","time":{"start":1660132269439,"stop":1660132269439,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_adminConfiguration.AdminConfigurationsTest testMethod=test_Admin_Verify_CountrySettings_Pagination>\n\n    @allure.story('AdminConfiguration')  # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR)  # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Admin_Verify_CountrySettings_Pagination(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.adminNavigation = AdminNavigation(self.driver)\n        self.countrySettingsNavigation = CountrySettingsNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.adminConfigurationPage = AdminConfigurationPage(self.driver)\n        self.countrySettingsPage = CountrySettingsPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_adminConfiguration.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f05bbfb03d0>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132277536,"stop":1660132282609,"duration":5073},"status":"passed","steps":[],"attachments":[{"uid":"e2795cd5813ba010","name":"Homepage loaded completely.1660132277604.png","source":"e2795cd5813ba010.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132282609,"stop":1660132316236,"duration":33627},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_adminConfiguration.py\", line 83, in test_Admin_Verify_CountrySettings_Pagination\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"db6c44e312b4708c","name":"Navigation to login page failed.1660132314705.png","source":"db6c44e312b4708c.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"95c10ded13df57ee","name":"log","source":"95c10ded13df57ee.txt","type":"text/plain","size":992},{"uid":"6366613034b40ffa","name":"stdout","source":"6366613034b40ffa.txt","type":"text/plain","size":100},{"uid":"ce12007d813b6aa1","name":"stderr","source":"ce12007d813b6aa1.txt","type":"text/plain","size":6794}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132316291,"stop":1660132316353,"duration":62},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132316353,"stop":1660132316353,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_AdminConfigurationsTest::0","time":{"start":1660132316354,"stop":1660132316354,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"AdminConfiguration"},{"name":"severity","value":"minor"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"AdminConfigurationsTest"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2373-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":6},"items":[{"uid":"8ce865e02156765e","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/24//#testresult/8ce865e02156765e","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132197201,"stop":1660132233648,"duration":36447}},{"uid":"f2790028fe8bc3b4","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/f2790028fe8bc3b4","status":"passed","time":{"start":1660128726829,"stop":1660128784782,"duration":57953}},{"uid":"1269395f1da465a3","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/1269395f1da465a3","status":"broken","statusDetails":"TypeError: object of type 'NoneType' has no len()","time":{"start":1660127786254,"stop":1660127843916,"duration":57662}},{"uid":"327447c95a1c38a8","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/327447c95a1c38a8","status":"passed","time":{"start":1660121426755,"stop":1660121497290,"duration":70535}},{"uid":"8d63a26f79a651c5","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/8d63a26f79a651c5","status":"passed","time":{"start":1660120886814,"stop":1660120955610,"duration":68796}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"6bda6fcbb0219cea.json","parameterValues":[]}