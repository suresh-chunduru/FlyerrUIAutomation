{"uid":"4bfe97635669c483","name":"test_VerifyErrorSigup_with_existing_email","fullName":"tests.test_suite_demo.SignUpTest#test_VerifyErrorSigup_with_existing_email","historyId":"8ae808b1a6261e6f778f98e1f777797a","time":{"start":1660132327811,"stop":1660132364504,"duration":36693},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_signup.SignUpTest testMethod=test_VerifyErrorSigup_with_existing_email>\n\n    @allure.story('KeyCloak') # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_VerifyErrorSigup_with_existing_email(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.signUpPage = SignUpPage(self.driver)\n        self.emailVerificationPage = EmailVerificationPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_signup.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fb7e0d88280>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"oneTimeSetUp","time":{"start":1660132316034,"stop":1660132316034,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132316034,"stop":1660132327810,"duration":11776},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_SignUpTest","time":{"start":1660132316034,"stop":1660132316034,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_signup.SignUpTest testMethod=test_VerifyErrorSigup_with_existing_email>\n\n    @allure.story('KeyCloak') # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_VerifyErrorSigup_with_existing_email(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.signUpPage = SignUpPage(self.driver)\n        self.emailVerificationPage = EmailVerificationPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_signup.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fb7e0d88280>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132327812,"stop":1660132331934,"duration":4122},"status":"passed","steps":[],"attachments":[{"uid":"8908f4e5c0072dbb","name":"Homepage loaded completely.1660132327819.png","source":"8908f4e5c0072dbb.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132331934,"stop":1660132364504,"duration":32570},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_signup.py\", line 173, in test_VerifyErrorSigup_with_existing_email\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"ada1f4cc0e82d4c5","name":"Navigation to login page failed.1660132364030.png","source":"ada1f4cc0e82d4c5.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"d801d39fb645a9cd","name":"log","source":"d801d39fb645a9cd.txt","type":"text/plain","size":992},{"uid":"be6737dc2bbd993f","name":"stdout","source":"be6737dc2bbd993f.txt","type":"text/plain","size":100},{"uid":"25e1b2b070157f4d","name":"stderr","source":"25e1b2b070157f4d.txt","type":"text/plain","size":6526}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132364512,"stop":1660132364578,"duration":66},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132364579,"stop":1660132364579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_SignUpTest::0","time":{"start":1660132364579,"stop":1660132364579,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"KeyCloak"},{"name":"severity","value":"minor"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"SignUpTest"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2394-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"a1d32aab50c4a319","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/a1d32aab50c4a319","status":"passed","time":{"start":1660128822529,"stop":1660128839530,"duration":17001}},{"uid":"eb62d70de82802bb","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/eb62d70de82802bb","status":"passed","time":{"start":1660127785228,"stop":1660127853630,"duration":68402}},{"uid":"c70cb6263bac085c","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/c70cb6263bac085c","status":"passed","time":{"start":1660121426870,"stop":1660121481296,"duration":54426}},{"uid":"909ac21a6d414dff","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/909ac21a6d414dff","status":"passed","time":{"start":1660120886797,"stop":1660120943678,"duration":56881}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"4bfe97635669c483.json","parameterValues":[]}