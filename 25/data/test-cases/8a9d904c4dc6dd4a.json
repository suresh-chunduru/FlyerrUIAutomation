{"uid":"8a9d904c4dc6dd4a","name":"test_Profile_Individual_Flyer_EditServiceLocation","fullName":"tests.test_suite_demo.ProfileTest#test_Profile_Individual_Flyer_EditServiceLocation","historyId":"d1516c52a340026e75be8be2d4d52994","time":{"start":1660132323159,"stop":1660132361199,"duration":38040},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditServiceLocation>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditServiceLocation(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_profile.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fe945403070>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ProfileTest","time":{"start":1660132316705,"stop":1660132316705,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660132316705,"stop":1660132316705,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132316705,"stop":1660132323158,"duration":6453},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditServiceLocation>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditServiceLocation(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_profile.py:124: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fe945403070>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132323160,"stop":1660132327695,"duration":4535},"status":"passed","steps":[],"attachments":[{"uid":"a6b61c06ae97954d","name":"Homepage loaded completely.1660132323167.png","source":"a6b61c06ae97954d.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132327695,"stop":1660132361197,"duration":33502},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_profile.py\", line 124, in test_Profile_Individual_Flyer_EditServiceLocation\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"84cdefc677de2b3e","name":"Navigation to login page failed.1660132359771.png","source":"84cdefc677de2b3e.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"a40c4cf46a43bed5","name":"log","source":"a40c4cf46a43bed5.txt","type":"text/plain","size":992},{"uid":"c47fca5eecfb1e35","name":"stdout","source":"c47fca5eecfb1e35.txt","type":"text/plain","size":100},{"uid":"e0312876bee91f66","name":"stderr","source":"e0312876bee91f66.txt","type":"text/plain","size":6535}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132361249,"stop":1660132361330,"duration":81},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132361330,"stop":1660132361330,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_ProfileTest::0","time":{"start":1660132361331,"stop":1660132361331,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Profile"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"ProfileTest"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2378-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":5},"items":[{"uid":"e770f0a7b0b7a93b","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/e770f0a7b0b7a93b","status":"failed","statusDetails":"AssertionError: Navigation to profile page failed","time":{"start":1660128768594,"stop":1660128856430,"duration":87836}},{"uid":"cb0c95dfbb2ec79","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/cb0c95dfbb2ec79","status":"failed","statusDetails":"AssertionError: Navigation to profile page failed","time":{"start":1660127786947,"stop":1660127881002,"duration":94055}},{"uid":"34a1fd804dd23aed","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/34a1fd804dd23aed","status":"passed","time":{"start":1660121426713,"stop":1660121540435,"duration":113722}},{"uid":"2c6334ecce63aa71","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/2c6334ecce63aa71","status":"passed","time":{"start":1660120886107,"stop":1660120997415,"duration":111308}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"8a9d904c4dc6dd4a.json","parameterValues":[]}