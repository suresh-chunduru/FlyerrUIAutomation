{"uid":"55c318a12727d8a0","name":"test_VerifyErrorSigup_with_existing_username","fullName":"tests.test_suite_demo.SignUpTest#test_VerifyErrorSigup_with_existing_username","historyId":"c44a31484919fb0fefcdd2eeb1f96b02","time":{"start":1660132323355,"stop":1660132361243,"duration":37888},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_signup.SignUpTest testMethod=test_VerifyErrorSigup_with_existing_username>\n\n    @allure.story('KeyCloak') # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_VerifyErrorSigup_with_existing_username(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.signUpPage = SignUpPage(self.driver)\n        self.emailVerificationPage = EmailVerificationPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_signup.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f4235a4ec80>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_SignUpTest","time":{"start":1660132316768,"stop":1660132316768,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132316777,"stop":1660132323354,"duration":6577},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660132316777,"stop":1660132316777,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_signup.SignUpTest testMethod=test_VerifyErrorSigup_with_existing_username>\n\n    @allure.story('KeyCloak') # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_VerifyErrorSigup_with_existing_username(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.signUpPage = SignUpPage(self.driver)\n        self.emailVerificationPage = EmailVerificationPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_signup.py:139: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f4235a4ec80>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132323356,"stop":1660132327838,"duration":4482},"status":"passed","steps":[],"attachments":[{"uid":"eaa6c397bb48c730","name":"Homepage loaded completely.1660132323361.png","source":"eaa6c397bb48c730.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132327838,"stop":1660132361243,"duration":33405},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_signup.py\", line 139, in test_VerifyErrorSigup_with_existing_username\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"a022710f3d6a62cc","name":"Navigation to login page failed.1660132359904.png","source":"a022710f3d6a62cc.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"bfaf0f07bac82b2b","name":"log","source":"bfaf0f07bac82b2b.txt","type":"text/plain","size":992},{"uid":"4495703aa8967fed","name":"stdout","source":"4495703aa8967fed.txt","type":"text/plain","size":100},{"uid":"d4fa1704dd044ab1","name":"stderr","source":"d4fa1704dd044ab1.txt","type":"text/plain","size":6529}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132361292,"stop":1660132361366,"duration":74},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_SignUpTest::0","time":{"start":1660132361367,"stop":1660132361367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132361367,"stop":1660132361367,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"KeyCloak"},{"name":"severity","value":"minor"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"SignUpTest"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2397-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":4,"unknown":0,"total":5},"items":[{"uid":"3283190dd988526c","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/3283190dd988526c","status":"passed","time":{"start":1660128805183,"stop":1660128825926,"duration":20743}},{"uid":"27e69e63960afdd","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/27e69e63960afdd","status":"passed","time":{"start":1660127782719,"stop":1660127853800,"duration":71081}},{"uid":"359f89900d7e441f","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/359f89900d7e441f","status":"passed","time":{"start":1660121428107,"stop":1660121485907,"duration":57800}},{"uid":"90bba6522edb1257","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/90bba6522edb1257","status":"passed","time":{"start":1660120887720,"stop":1660120943319,"duration":55599}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"55c318a12727d8a0.json","parameterValues":[]}