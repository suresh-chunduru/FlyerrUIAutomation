{"uid":"20a7b7a0418b7f47","name":"test_Signup_Verify_Signup_page","fullName":"tests.test_suite_demo.SignUpTest#test_Signup_Verify_Signup_page","historyId":"a9fa9ae7eac88a7d376107d89bbc7cfa","time":{"start":1660132323274,"stop":1660132361522,"duration":38248},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_signup.SignUpTest testMethod=test_Signup_Verify_Signup_page>\n\n    @allure.story('KeyCloak')  # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR)  # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Signup_Verify_Signup_page(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.signUpPage = SignUpPage(self.driver)\n        self.emailVerificationPage = EmailVerificationPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_signup.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f76f23c6aa0>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_SignUpTest","time":{"start":1660132317440,"stop":1660132317440,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132317441,"stop":1660132323273,"duration":5832},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660132317441,"stop":1660132317441,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_signup.SignUpTest testMethod=test_Signup_Verify_Signup_page>\n\n    @allure.story('KeyCloak')  # epic/story of the test case\n    @allure.severity(allure.severity_level.MINOR)  # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Signup_Verify_Signup_page(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginNavigation = LoginNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.signUpPage = SignUpPage(self.driver)\n        self.emailVerificationPage = EmailVerificationPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_signup.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f76f23c6aa0>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132323275,"stop":1660132327970,"duration":4695},"status":"passed","steps":[],"attachments":[{"uid":"9667bcc5eb4f2a87","name":"Homepage loaded completely.1660132323288.png","source":"9667bcc5eb4f2a87.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132327970,"stop":1660132361521,"duration":33551},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_signup.py\", line 41, in test_Signup_Verify_Signup_page\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"ce2690beeffec579","name":"Navigation to login page failed.1660132360030.png","source":"ce2690beeffec579.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"5e806e79ee4f19f7","name":"log","source":"5e806e79ee4f19f7.txt","type":"text/plain","size":992},{"uid":"5267bd4ed9fc414c","name":"stdout","source":"5267bd4ed9fc414c.txt","type":"text/plain","size":100},{"uid":"1432acdc3c483c74","name":"stderr","source":"1432acdc3c483c74.txt","type":"text/plain","size":6514}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132361533,"stop":1660132361596,"duration":63},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132361596,"stop":1660132361596,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_SignUpTest::0","time":{"start":1660132361597,"stop":1660132361597,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"KeyCloak"},{"name":"severity","value":"minor"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"SignUpTest"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2391-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"minor","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":5},"items":[{"uid":"f54d0d63773fa001","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/f54d0d63773fa001","status":"passed","time":{"start":1660128781125,"stop":1660128826653,"duration":45528}},{"uid":"944df563b1a00ea4","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/944df563b1a00ea4","status":"broken","statusDetails":"TypeError: object of type 'NoneType' has no len()","time":{"start":1660127787402,"stop":1660127840730,"duration":53328}},{"uid":"b9e48fe4fa837e41","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/b9e48fe4fa837e41","status":"passed","time":{"start":1660121428097,"stop":1660121495097,"duration":67000}},{"uid":"5c61b9b0d26456c4","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/5c61b9b0d26456c4","status":"passed","time":{"start":1660120886688,"stop":1660120952849,"duration":66161}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"20a7b7a0418b7f47.json","parameterValues":[]}