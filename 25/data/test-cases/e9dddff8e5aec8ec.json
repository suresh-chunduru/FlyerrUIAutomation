{"uid":"e9dddff8e5aec8ec","name":"test_Login_Login_with_Admin","fullName":"tests.test_suite_demo.LoginTest#test_Login_Login_with_Admin","historyId":"47fcb167892f9a2261a581716279c6db","time":{"start":1660132277632,"stop":1660132316623,"duration":38991},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_login.LoginTest testMethod=test_Login_Login_with_Admin>\n\n    @allure.story('KeyCloak')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Login_Login_with_Admin(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_login.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f61a9308610>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_LoginTest","time":{"start":1660132269449,"stop":1660132269449,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660132269449,"stop":1660132269450,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132269450,"stop":1660132277631,"duration":8181},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_login.LoginTest testMethod=test_Login_Login_with_Admin>\n\n    @allure.story('KeyCloak')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Login_Login_with_Admin(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n\ntests/test_login.py:87: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f61a9308610>\nresult = False, passResultMessage = 'Navigation to login page'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132277633,"stop":1660132282560,"duration":4927},"status":"passed","steps":[],"attachments":[{"uid":"c0461a89ba5f705d","name":"Homepage loaded completely.1660132277664.png","source":"c0461a89ba5f705d.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132282560,"stop":1660132316623,"duration":34063},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_login.py\", line 87, in test_Login_Login_with_Admin\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"ebec3fca1dd6e517","name":"Navigation to login page failed.1660132314607.png","source":"ebec3fca1dd6e517.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"fe2909ef28c779ba","name":"log","source":"fe2909ef28c779ba.txt","type":"text/plain","size":992},{"uid":"f6a74616a92ab3bd","name":"stdout","source":"f6a74616a92ab3bd.txt","type":"text/plain","size":100},{"uid":"74c26c2cbb360ddc","name":"stderr","source":"74c26c2cbb360ddc.txt","type":"text/plain","size":6754}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132316707,"stop":1660132316779,"duration":72},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_LoginTest::0","time":{"start":1660132316780,"stop":1660132316780,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132316780,"stop":1660132316780,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"KeyCloak"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"LoginTest"},{"name":"host","value":"fv-az449-327"},{"name":"thread","value":"2375-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":3,"unknown":0,"total":6},"items":[{"uid":"56cd1c272f74c51b","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/24//#testresult/56cd1c272f74c51b","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132197201,"stop":1660132233666,"duration":36465}},{"uid":"875acf23413dea6","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/875acf23413dea6","status":"passed","time":{"start":1660128724496,"stop":1660128759296,"duration":34800}},{"uid":"2395718b22f4ab92","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/2395718b22f4ab92","status":"broken","statusDetails":"TypeError: object of type 'NoneType' has no len()","time":{"start":1660127784323,"stop":1660127843890,"duration":59567}},{"uid":"396467e5e0db75ab","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/396467e5e0db75ab","status":"passed","time":{"start":1660121426739,"stop":1660121481207,"duration":54468}},{"uid":"45638c6d1e20cd51","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/45638c6d1e20cd51","status":"passed","time":{"start":1660120885814,"stop":1660120940025,"duration":54211}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"e9dddff8e5aec8ec.json","parameterValues":[]}