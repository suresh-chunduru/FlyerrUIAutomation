{"uid":"7b1f58c116cb518a","name":"test_Login_Login_with_Google","fullName":"tests.test_suite_demo.LoginTest#test_Login_Login_with_Google","historyId":"0c43215cb02488ae8f5707a0aac395ed","time":{"start":1660214813141,"stop":1660214907514,"duration":94373},"status":"failed","statusMessage":"AssertionError: Login with Google failed","statusTrace":"self = <tests.test_login.LoginTest testMethod=test_Login_Login_with_Google>\n\n    @allure.story('KeyCloak')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Login_Login_with_Google(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with Google credentials'):\n            self.loginPage.loginWithGoogle(username=td.testData(\"loginData.google.username\"), password=td.testData(\"loginData.google.password\"))\n>           self.ts.markFinal(self.loggedInPage.isAt, \"Login with Google successful\", \"Login with Google failed\")\n\ntests/test_login.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fd952d04670>\nresult = False, passResultMessage = 'Login with Google successful'\nfailResultMessage = 'Login with Google failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Login with Google failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"oneTimeSetUp","time":{"start":1660214802289,"stop":1660214802289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_LoginTest","time":{"start":1660214802289,"stop":1660214802289,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660214802289,"stop":1660214813138,"duration":10849},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Login with Google failed","statusTrace":"self = <tests.test_login.LoginTest testMethod=test_Login_Login_with_Google>\n\n    @allure.story('KeyCloak')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Login_Login_with_Google(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with Google credentials'):\n            self.loginPage.loginWithGoogle(username=td.testData(\"loginData.google.username\"), password=td.testData(\"loginData.google.password\"))\n>           self.ts.markFinal(self.loggedInPage.isAt, \"Login with Google successful\", \"Login with Google failed\")\n\ntests/test_login.py:179: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7fd952d04670>\nresult = False, passResultMessage = 'Login with Google successful'\nfailResultMessage = 'Login with Google failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Login with Google failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660214813143,"stop":1660214816907,"duration":3764},"status":"passed","steps":[],"attachments":[{"uid":"ed0209c483a84bf","name":"Homepage loaded completely.1660214813214.png","source":"ed0209c483a84bf.png","type":"image/png","size":52402}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660214816907,"stop":1660214829315,"duration":12408},"status":"passed","steps":[],"attachments":[{"uid":"703f9696864120f5","name":"Navigation to login page.1660214821574.png","source":"703f9696864120f5.png","type":"image/png","size":164992}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Login with Google credentials","time":{"start":1660214829315,"stop":1660214907514,"duration":78199},"status":"failed","statusMessage":"AssertionError: Login with Google failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_login.py\", line 179, in test_Login_Login_with_Google\n    self.ts.markFinal(self.loggedInPage.isAt, \"Login with Google successful\", \"Login with Google failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"77c22ad0d1b5a570","name":"Login with Google failed.1660214907110.png","source":"77c22ad0d1b5a570.png","type":"image/png","size":52749}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"a769f98d7a034c97","name":"log","source":"a769f98d7a034c97.txt","type":"text/plain","size":2708},{"uid":"adf7598d7971bae","name":"stdout","source":"adf7598d7971bae.txt","type":"text/plain","size":100},{"uid":"622f47fad5e8ebc9","name":"stderr","source":"622f47fad5e8ebc9.txt","type":"text/plain","size":26688}],"parameters":[],"stepsCount":3,"attachmentsCount":6,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660214907532,"stop":1660214907597,"duration":65},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660214907598,"stop":1660214907598,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_LoginTest::0","time":{"start":1660214907598,"stop":1660214907598,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"KeyCloak"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"LoginTest"},{"name":"host","value":"fv-az123-483"},{"name":"thread","value":"2323-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":9},"items":[{"uid":"7f3fa6dd9195e6d3","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/27//#testresult/7f3fa6dd9195e6d3","status":"failed","statusDetails":"AssertionError: Login with Google failed","time":{"start":1660214716629,"stop":1660214805338,"duration":88709}},{"uid":"fff6dfb70ac058ad","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/26//#testresult/fff6dfb70ac058ad","status":"failed","statusDetails":"AssertionError: Login with Google failed","time":{"start":1660135075810,"stop":1660135170297,"duration":94487}},{"uid":"f6998bcc8c40a140","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/25//#testresult/f6998bcc8c40a140","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132277833,"stop":1660132317008,"duration":39175}},{"uid":"b2c6c1227090de5","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/24//#testresult/b2c6c1227090de5","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132197424,"stop":1660132233670,"duration":36246}},{"uid":"a562002581324bb3","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/a562002581324bb3","status":"failed","statusDetails":"AssertionError: Login with Google failed","time":{"start":1660128725911,"stop":1660128824291,"duration":98380}},{"uid":"740c38d870a82848","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/740c38d870a82848","status":"failed","statusDetails":"AssertionError: Login with Google failed","time":{"start":1660127784954,"stop":1660127918008,"duration":133054}},{"uid":"f110fa18eb286c0d","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/f110fa18eb286c0d","status":"failed","statusDetails":"AssertionError: Login with Google failed","time":{"start":1660121426913,"stop":1660121546697,"duration":119784}},{"uid":"f81808d5d8170398","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/f81808d5d8170398","status":"failed","statusDetails":"AssertionError: Login with Google failed","time":{"start":1660120885868,"stop":1660121004773,"duration":118905}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"7b1f58c116cb518a.json","parameterValues":[]}