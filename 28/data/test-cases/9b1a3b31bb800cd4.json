{"uid":"9b1a3b31bb800cd4","name":"test_Profile_Individual_Flyer_EditServiceLocation","fullName":"tests.test_suite_demo.ProfileTest#test_Profile_Individual_Flyer_EditServiceLocation","historyId":"d1516c52a340026e75be8be2d4d52994","time":{"start":1660214852947,"stop":1660214934290,"duration":81343},"status":"failed","statusMessage":"AssertionError: Navigation to profile page failed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditServiceLocation>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditServiceLocation(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with IndividualAccount credentials'):\n            self.loginPage.loginAndRefresh(username=td.testData(\"loginData.individual.username\"), password=td.testData(\"loginData.individual.password\"))\n            self.ts.markFinal(self.loggedInPage.isAt, \"Login with IndividualAccount successful\", \"Login with IndividualAccount failed\")\n    \n        with allure.step('Navigate to Profile Page'):\n            self.loggedInNavigation.goToProfilePage()\n>           self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n\ntests/test_profile.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f7caf04cac0>\nresult = False, passResultMessage = 'Navigation to profile page'\nfailResultMessage = 'Navigation to profile page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to profile page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_ProfileTest","time":{"start":1660214847061,"stop":1660214847061,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660214847062,"stop":1660214847062,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660214847062,"stop":1660214852946,"duration":5884},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to profile page failed","statusTrace":"self = <tests.test_profile.ProfileTest testMethod=test_Profile_Individual_Flyer_EditServiceLocation>\n\n    @allure.story('Profile')  # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_Profile_Individual_Flyer_EditServiceLocation(self):\n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.profileNavigation = ProfileNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.profilePage = ProfilePage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n            self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page\", \"Navigation to login page failed\")\n    \n        with allure.step('Login with IndividualAccount credentials'):\n            self.loginPage.loginAndRefresh(username=td.testData(\"loginData.individual.username\"), password=td.testData(\"loginData.individual.password\"))\n            self.ts.markFinal(self.loggedInPage.isAt, \"Login with IndividualAccount successful\", \"Login with IndividualAccount failed\")\n    \n        with allure.step('Navigate to Profile Page'):\n            self.loggedInNavigation.goToProfilePage()\n>           self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n\ntests/test_profile.py:132: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f7caf04cac0>\nresult = False, passResultMessage = 'Navigation to profile page'\nfailResultMessage = 'Navigation to profile page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to profile page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660214852949,"stop":1660214854347,"duration":1398},"status":"passed","steps":[],"attachments":[{"uid":"70b95bffb18ffb9e","name":"Homepage loaded completely.1660214852983.png","source":"70b95bffb18ffb9e.png","type":"image/png","size":52402}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660214854347,"stop":1660214864687,"duration":10340},"status":"passed","steps":[],"attachments":[{"uid":"88c6061352c5fa76","name":"Navigation to login page.1660214859857.png","source":"88c6061352c5fa76.png","type":"image/png","size":164992}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Login with IndividualAccount credentials","time":{"start":1660214864687,"stop":1660214879609,"duration":14922},"status":"passed","steps":[],"attachments":[{"uid":"695354df167fd3b6","name":"Login with IndividualAccount successful.1660214877476.png","source":"695354df167fd3b6.png","type":"image/png","size":342903}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to Profile Page","time":{"start":1660214879609,"stop":1660214934289,"duration":54680},"status":"failed","statusMessage":"AssertionError: Navigation to profile page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_profile.py\", line 132, in test_Profile_Individual_Flyer_EditServiceLocation\n    self.ts.markFinal(self.profilePage.isAt, \"Navigation to profile page\", \"Navigation to profile page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"e1a08ee94191eb3e","name":"Navigation to profile page failed.1660214933740.png","source":"e1a08ee94191eb3e.png","type":"image/png","size":342903}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"9db543938038f231","name":"log","source":"9db543938038f231.txt","type":"text/plain","size":3375},{"uid":"82dacec7808369bc","name":"stdout","source":"82dacec7808369bc.txt","type":"text/plain","size":100},{"uid":"a0a4ef829ff32f4f","name":"stderr","source":"a0a4ef829ff32f4f.txt","type":"text/plain","size":13107}],"parameters":[],"stepsCount":4,"attachmentsCount":7,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660214934309,"stop":1660214934410,"duration":101},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660214934410,"stop":1660214934410,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_ProfileTest::0","time":{"start":1660214934411,"stop":1660214934411,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Profile"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"ProfileTest"},{"name":"host","value":"fv-az123-483"},{"name":"thread","value":"2320-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":6,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":8},"items":[{"uid":"9809483327dbaecb","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/27//#testresult/9809483327dbaecb","status":"failed","statusDetails":"AssertionError: Edit Service Location modal not displayed","time":{"start":1660214750177,"stop":1660214786387,"duration":36210}},{"uid":"5cc1df89cdd1c51b","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/26//#testresult/5cc1df89cdd1c51b","status":"failed","statusDetails":"AssertionError: Edit Service Location modal not displayed","time":{"start":1660135117720,"stop":1660135151388,"duration":33668}},{"uid":"8a9d904c4dc6dd4a","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/25//#testresult/8a9d904c4dc6dd4a","status":"failed","statusDetails":"AssertionError: Navigation to login page failed","time":{"start":1660132323159,"stop":1660132361199,"duration":38040}},{"uid":"e770f0a7b0b7a93b","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/e770f0a7b0b7a93b","status":"failed","statusDetails":"AssertionError: Navigation to profile page failed","time":{"start":1660128768594,"stop":1660128856430,"duration":87836}},{"uid":"cb0c95dfbb2ec79","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/cb0c95dfbb2ec79","status":"failed","statusDetails":"AssertionError: Navigation to profile page failed","time":{"start":1660127786947,"stop":1660127881002,"duration":94055}},{"uid":"34a1fd804dd23aed","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/21//#testresult/34a1fd804dd23aed","status":"passed","time":{"start":1660121426713,"stop":1660121540435,"duration":113722}},{"uid":"2c6334ecce63aa71","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/20//#testresult/2c6334ecce63aa71","status":"passed","time":{"start":1660120886107,"stop":1660120997415,"duration":111308}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"9b1a3b31bb800cd4.json","parameterValues":[]}