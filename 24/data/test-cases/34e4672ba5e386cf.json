{"uid":"34e4672ba5e386cf","name":"test_post_a_remote_job_request_with_flexible_date","fullName":"tests.test_suite_demo.PostJobRequest#test_post_a_remote_job_request_with_flexible_date","historyId":"ab61f7f720a8eddc250d80aa07bbcd12","time":{"start":1660132197196,"stop":1660132234008,"duration":36812},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_postJobRequest.PostJobRequest testMethod=test_post_a_remote_job_request_with_flexible_date>\n\n    @allure.story('Job Management') # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_post_a_remote_job_request_with_flexible_date(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.postJobRequestPage = PostJobRequestPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page successful\", \"Navigation to login page failed\")\n\ntests/test_postJobRequest.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f74b34c4be0>\nresult = False, passResultMessage = 'Navigation to login page successful'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_unittest_setUpClass_fixture_PostJobRequest","time":{"start":1660132185178,"stop":1660132185178,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp","time":{"start":1660132185178,"stop":1660132185178,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1660132185178,"stop":1660132197170,"duration":11992},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: Navigation to login page failed","statusTrace":"self = <tests.test_postJobRequest.PostJobRequest testMethod=test_post_a_remote_job_request_with_flexible_date>\n\n    @allure.story('Job Management') # epic/story of the test case\n    # @allure.severity(allure.severity_level.MINOR) # severity of the test case\n    # @pytestrail.case('C48') # test case if on TestRail\n    def test_post_a_remote_job_request_with_flexible_date(self):\n    \n        self.homeNavigation = HomeNavigation(self.driver)\n        self.loggedInNavigation = LoggedInNavigation(self.driver)\n        self.loginPage = LoginPage(self.driver)\n        self.postJobRequestPage = PostJobRequestPage(self.driver)\n        self.loggedInPage = LoggedInPage(self.driver)\n        self.ts = TestStatus(self.driver)\n    \n        with allure.step('Waiting for homepage to completely load'):\n            self.ts.markFinal(self.page_has_loaded(), \"Homepage loaded completely\", \"Homepage not loaded completely\")\n    \n        with allure.step('Navigate to login page'):\n            self.homeNavigation.goToLoginPage()\n>           self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page successful\", \"Navigation to login page failed\")\n\ntests/test_postJobRequest.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <utilities.teststatus.TestStatus object at 0x7f74b34c4be0>\nresult = False, passResultMessage = 'Navigation to login page successful'\nfailResultMessage = 'Navigation to login page failed'\n\n    def markFinal(self, result, passResultMessage, failResultMessage):\n        \"\"\"\n        Mark the final result of the verification point in a test case\n        This needs to be called at least once in a test case\n        This should be final test status of the test case\n        \"\"\"\n        self.setResult(result, passResultMessage, failResultMessage)\n        if \"FAIL\" in self.resultList:\n            self.resultList.clear()\n>           assert False, failResultMessage\nE           AssertionError: Navigation to login page failed\n\nutilities/teststatus.py:55: AssertionError","steps":[{"name":"Waiting for homepage to completely load","time":{"start":1660132197196,"stop":1660132199820,"duration":2624},"status":"passed","steps":[],"attachments":[{"uid":"5eb28d6e4a7c6c86","name":"Homepage loaded completely.1660132197275.png","source":"5eb28d6e4a7c6c86.png","type":"image/png","size":40707}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":false,"hasContent":true},{"name":"Navigate to login page","time":{"start":1660132199820,"stop":1660132234008,"duration":34188},"status":"failed","statusMessage":"AssertionError: Navigation to login page failed\n","statusTrace":"  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/tests/test_postJobRequest.py\", line 38, in test_post_a_remote_job_request_with_flexible_date\n    self.ts.markFinal(self.loginPage.isAt, \"Navigation to login page successful\", \"Navigation to login page failed\")\n  File \"/home/runner/work/FlyerrUIAutomation/FlyerrUIAutomation/utilities/teststatus.py\", line 55, in markFinal\n    assert False, failResultMessage\n","steps":[],"attachments":[{"uid":"4e84351ee4d77a05","name":"Navigation to login page failed.1660132231932.png","source":"4e84351ee4d77a05.png","type":"image/png","size":330703}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[{"uid":"e139597e75f96f52","name":"log","source":"e139597e75f96f52.txt","type":"text/plain","size":992},{"uid":"649794d84b0c8e00","name":"stdout","source":"649794d84b0c8e00.txt","type":"text/plain","size":100},{"uid":"a53df928d54a868b","name":"stderr","source":"a53df928d54a868b.txt","type":"text/plain","size":6862}],"parameters":[],"stepsCount":2,"attachmentsCount":5,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"setUp::0","time":{"start":1660132234077,"stop":1660132234138,"duration":61},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"_unittest_setUpClass_fixture_PostJobRequest::0","time":{"start":1660132234139,"stop":1660132234139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"oneTimeSetUp::0","time":{"start":1660132234139,"stop":1660132234139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"story","value":"Job Management"},{"name":"tag","value":"@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_suite_demo"},{"name":"subSuite","value":"PostJobRequest"},{"name":"host","value":"fv-az462-115"},{"name":"thread","value":"2318-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_suite_demo"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":1,"skipped":0,"passed":1,"unknown":0,"total":3},"items":[{"uid":"39b820c9718033bf","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/23//#testresult/39b820c9718033bf","status":"passed","time":{"start":1660128727275,"stop":1660128798791,"duration":71516}},{"uid":"99ec5f3494b2d270","reportUrl":"https://suresh-chunduru.github.io/FlyerrUIAutomation/22//#testresult/99ec5f3494b2d270","status":"broken","statusDetails":"TypeError: object of type 'NoneType' has no len()","time":{"start":1660127784431,"stop":1660127839107,"duration":54676}}]},"tags":["@pytest.mark.usefixtures('oneTimeSetUp', 'setUp')"]},"source":"34e4672ba5e386cf.json","parameterValues":[]}